z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
inf-inf
Inf - Inf
library(pwr)
install.packages("pwr")
#How many participants will you need in your study?
library(pwr)
pwr.t.test(d=.8,sig.level=.05,power=.9,type="two.sample",alternative="two.sided")
pwr.t.test(n=20,d=.5,sig.level=.01,type="two.sample",alternative="two.sided")
pwr.t.test(n1=20,n2=10,d=.5,sig.level=.01,type="two.sample",alternative="two.sided")
#it’s actually due to random variability.
pwr.t2n.test(n1=20,n2=10,d=.5,sig.level=.01,type="two.sample",alternative="two.sided")
pwr.t2n.test(n1=20,n2=10,d=.5,sig.level=.01,alternative="two.sided")
pwr.anova.test(k=5,f=.25,sig.level=.05,power=.8)
pwr.r.test(r=.25,sig.level=.05,power=.9,alternative="greater")
pwr.f2.test(u=3,f2=0.0769,sig.level=.05,power=.90)
pwr.2p.test(h=ES.h(.65,.6),sig.level=.05,power=.90,alternative="greater")
prob<- matrix(c(.42,.28,.03,.07,.10,.10),byrow=TRUE,nrow=3)
ES.w2(prob)
pwr.chisq.test(w=.1853, df=2, sig.level=.05, power=.9)
library(pwr)
es <- seq(.1, .5, .01)
nes <- length(es)
samsize <- NULL
for (i in 1:nes){
result <- pwr.anova.test(k=5, f=es[i], sig.level=.05, power=.9)
samsize[i] <- ceiling(result$n)
}
plot(samsize,es, type="l", lwd=2, col="red",
ylab="Effect Size",
xlab="Sample Size (per cell)",
main="One Way ANOVA with Power=.90 and Alpha=.05")
library(pwr)
r <- seq(.1,.5,.01)#correlation coefficient
nr <- length(r)
p <- seq(.4,.9,.1) #power
np <- length(p)
samsize <- array(numeric(nr*np), dim=c(nr,np))
for (i in 1:np){
for (j in 1:nr){
result <- pwr.r.test(n = NULL, r = r[j],
sig.level = .05, power = p[i],
alternative = "two.sided")
samsize[j,i] <- ceiling(result$n)
}
}
xrange <- range(r)
yrange <- round(range(samsize))
colors <- rainbow(length(p))
plot(xrange, yrange, type="n",
xlab="Correlation Coefficient (r)",
ylab="Sample Size (n)" )
for (i in 1:np){
lines(r, samsize[,i], type="l", lwd=2, col=colors[i])
}
abline(v=0, h=seq(0,yrange[2],50), lty=2, col="grey89")
abline(h=0, v=seq(xrange[1],xrange[2],.02), lty=2,
col="gray89")
title("Sample Size Estimation for Correlation Studies\n Sig=0.05 (Two-tailed)")
legend("topright", title="Power", as.character(p),fill=colors)
install.packages(“piface”, repos=”http://R-Forge.R-project.org”)
install.packages(“piface”, repos=”http://R-Forge.R-project.org”)
install.packages(“piface”, repos="http://R-Forge.R-project.org")
install.packages("piface", repos="http://R-Forge.R-project.org")
library(piface)
install.packages("piface", repos="http://R-Forge.R-project.org")
?solve
x <- 1:10
if(x > 5) {
x <- 0
}
x > 5
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
attach(mtcars)
plot(wt,mpg,
main="Basic scatter plot of MPG vs Weight",
xlab="Car weight (Lbs/100)",
ylab="Miles per gallon", pch=19)
abline(lm(mpg~wt),col="red",lwd=2,lty=1)
lines(lowess(wt,mpg),col="blue",lwd=2,lty=2)
library(car)
scatterplot(mpg~wt | cyl, data=mtcars,lwd=2,
main="Scatter plot of MPG vs Weight by #Cylinders",
xlab="Car weight (Lbs/100)",
ylab="Miles per gallon",
legend.plot=TRUE,
#points identified by mouse clicks
id.method="identify",
labels=row.names(mtcars),
boxplot="xy")
scatterplot(mpg~wt | cyl, data=mtcars,lwd=2,
main="Scatter plot of MPG vs Weight by #Cylinders",
xlab="Car weight (Lbs/100)",
ylab="Miles per gallon",
legend.plot=TRUE,
#points identified by mouse clicks
id.method="identify",
labels=row.names(mtcars),
boxplot="xy")
pairs(~mpg+disp+drat+wt, data=mtcars,main="Basic Scatter Plot Matrix")
pairs(~mpg+disp+drat+wt, data=mtcars,main="Basic Scatter Plot Matrix", upper.panel=NULL)
scatterplotMatrix(~mpg+disp+drat+wt,date=mtcars,
#suppresses lines showing spread and asymmetry
spread=FALSE,
lty.smooth=2,
main="Scatter Plot Matrix via car package")
scatterplotMatrix(~mpg+disp+drat+wt,date=mtcars,
#suppresses lines showing spread and asymmetry
#spread=FALSE,
lty.smooth=2,
main="Scatter Plot Matrix via car package")
scatterplotMatrix(~mpg+disp+drat+wt | cyl,date=mtcars,
#suppresses lines showing spread and asymmetry
spread=FALSE,
diagonal="histogram",
main="Scatter Plot Matrix via car package")
cor(mtcars[c("mpg","wt","disp","drat")])
warnings()
install.packages("gclus")
library(gclus)
#absolute values of the correlations among variables
mydata<- mtcars[c(1,3,5,6)]
mydata.corr<- abs(cor(mydata))
#get colors for the plot. Given a symmetric matrix (a corr matrix in this case)
#dmat.color() return a matrix of colors
mycolors<- dmat.color(mydata.corr)
#order.single() sorts obj so that similar obj pairs are adjacent
myorder<- order.single(mydata.corr)
cpairs(mydata,myorder,panel.colors=mycolors,
#add a small space btw cells of the matrix
gap=.5,
main="Variables Ordered and Colored by Correlation")
set.seed(1234)
n<- 10000
c1<- matrix(rnorm(n,mean=0,sd=.5),ncol=2)
c1<- matrix(rnorm(n,mean=3,sd=2),ncol=2)
mydata<-rbind(c1,c2)
mydata<-as.data.frame(mydata)
names(mydata)<-c("x","y")
set.seed(1234)
n<- 10000
c1<- matrix(rnorm(n,mean=0,sd=.5),ncol=2)
c2<- matrix(rnorm(n,mean=3,sd=2),ncol=2)
mydata<-rbind(c1,c2)
mydata<-as.data.frame(mydata)
names(mydata)<-c("x","y")
head(mydata)
with(mydata,plot(x,y,pch=19,main="Scatter plot with 10,000 observations"))
with(mydata,smoothScatter(x,y,main="Scatterplot colored by Smoothed Densities"))
install.packages("hexbin")
library(hexbin)
with(mydata, {
bin<- hexbin(x,y,xbins=50)
plot(bin,main="Hexagonal Binning with 10,000 observations")
})
install.packages("IDPmisc")
library(IDPmisc)
with(mydata,
iplot(x,y,main="Image Scatter plot with Color indication Density"))
install.packages("scatterplot3d")
library(scatterplot3d)
attach(mtcars)
scatterplot3d(wt,disp,mpg,
main="Basic 3D Scatter Plot")
scatterplot3d(wt,disp,mpg,
main="Basic 3D Scatter Plot")
scatterplot3d(wt,disp,mpg,
pch=16,
highlight.3d=TRUE,
type="h",
main="Basic 3D Scatter Plot")
library(scatterplot3d)
attach(mtcars)
scatterplot3d(wt,disp,mpg,
pch=16,
highlight.3d=TRUE,
type="h",
main="Basic 3D Scatter Plot")
s3d<- scatterplot3d(wt,disp,mpg,
pch=16,
#highlighting to enhance the impression of depth
highlight.3d=TRUE,
#vertical lines connecting dots to the horiz plane
type="h",
main="Basic 3D Scatter Plot")
fit<- lm(mpg~wt+disp)
s3d$plane3d(fit)
name<- c("Quan","Long","Nguyen","Hoa")
value<- c(2.3,3,4,2,3,4.5)
data<- as.data.frame(cbind(name,value))
value<- c(2.3,3.4,2.3,4.5)
data<- as.data.frame(cbind(name,value))
data
data[order(data$value,data$name)]
data[order(data$value,data$name),]
data[4,]
data[4,name]
data[4,"nam"e"]
data[4,"nam"]
data[4,"name"]
data
library(datasets)
mylist<- split(airquality,airquality$Month)
str(mylist)
head(mylist[1])
names(mylist[1])
may<-mylist[1][,c("Ozone","Solar.R")]
may<-mylist[1]
head(may)
head(may[,c("Ozone,Solar.R")])
head(may[,c("Ozone","Solar.R")])
head(may[,"Ozone"])
may[,1]
str(may)
may[1,1]
may["Ozone",]
may[,may$Ozone]
head(airqualiy[,1])
head(airquality[,1])
head(may[,1])
head(may)
str(may)
names(may)
may[1,1]
may[,]
summary(may)
summary(airquality)
may<- as.data.frame(may)
summary(may)
names(may)
head(may[,1])
may<-mylist[[1]][,c("Ozone","Solar.R")]
head(may)
names(may)
may<-mylist[[1]][,c("Ozone",as.numeric("Solar.R"))]
s <- split(airquality, airquality$Month)
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")],
na.rm = TRUE))
result<-sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")],
na.rm = TRUE))
str(result)
five<- result$5
five<- result[,1]
five
names(result)
names(five)
names(result)
result<-sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")],
na.rm = TRUE))
names(result)
names(result)
head(result)
colNames(result)
colnames(result)
rownames(result)
colnames(five)
five<- result[,1]
rownames(five)
colnames(five)
five
outcome<- c(11,12,13,14,15,16)
frequency<- c(10,9,11,14,10,6)
a<- c(1,2)
b<- c(2,3)
d<- rep(a,b)
d
options(digits,2)
?options
options(digits=2)
data<- rep(outcome,frequency)
data
options(digits=1)
mean(data)
length(data)
options(digits=2)
sd(data)
median(data)
summary(data)
str(data)
plot(data)
hist(data)
hist(data,bin=6)
?hist
hist(data,breaks=6)
outcome<- c(0,1)
frequency<- c(53,47)
data<- rep(outcome,frequency)
mean(data)
summary(data)
sd(data)
100-33.7
options(digits=2)
100-33.7
data<- read.csv("http://figshare.com/download/file/1542043",header=T,na.strings=" ")
install.packages("figshare")
install.packages("Rfigshare")
install.packages("rfigshare")
?rfigshare
??rfigshare
data<- read.csv("http://files.figshare.com/1542043/vitaminD.csv",header=T,na.strings=" ")
head(data)
data<- read.csv("http://files.figshare.com/1542043/vitaminD.csv",header=T,na.strings=" ")
library(psych)
describe(data)
install.packages("psych")
library(psych)
describe(data)
names(data)
str(data)
describeBy(data,sex,skew=F,interp=F)
attach(data)
describeBy(data,sex,skew=F,interp=F)
describeBy(data,sex,skew=F)
?describeBy
hist(menarche)
names(data)
hist(age)
hist(vitd)
hist(weight)
par(mfrow=c(2,2))
hist(vitd)
hist(pth)
hist(bmi)
hist(age)
def = vitd
def= replace(def,vitd<20.0,1)
def= replace(def,vitd>=20.0,0)
head(def)
tail(def)
CrossTable(def,sex,digits=3,chisq=T,fisher=T)
library(gmodels)
install.packages(gmodels)
install.packages("gmodels")
library(gmodels)
CrossTable(def,sex,digits=3,chisq=T,fisher=T)
CrossTable(def,season,digits=3,chisq=T,fisher=T)
CrossTable(def,location,digits=3,chisq=T,fisher=T)
names(data)
CrossTable(def,ruralurban,digits=3,chisq=T,fisher=T)
library(epicalc)
install.packages("epicalc")
library(epicalc)
logistic.dsplay(glm(def~sex,family=binomial))
logistic.display(glm(def~sex,family=binomial))
logistic.display(glm(def~factor(sex),family=binomial))
logistic.display(glm(def~as.factor(sex),family=binomial))
logistic.display(glm(def~ sex,family=binomial))
str(sex)
as.factor(sex)
logistic.display(glm(def~ ruralurban,family=binomial))
logistic.display(glm(def~ season,family=binomial))
logistic.display(glm(def~ bmi,family=binomial))
str(season)
factor(season)
logistic.display(glm(def~ factor(season),family=binomial))
hist(vitd)
logistic.display(glm(def~ factor(sex),family=binomial))
logistic.display(glm(def~ age + sex + bmi+ ruralurban+ factor(season),family=binomial))
library(MASS)
summary(glm.nb(def~age+sex+ruralurban,data=data))
fit= lm(vitd~ age+bmi+sex+factor(season),data=data)
step= stepAIC(fit,direction="both")
step$anova
library(relaimpo)
install.packages("relaimpo")
install.packages("boot")
library(relaimpo)
fit=lm(vitd~ age+bmi+sex+factor(season),data=data)
par(mrow=c(1,1))
par(mfrow=c(1,1))
fit=lm(vitd~ age+bmi+sex+factor(season),data=data)
calc.relimp(fit,rela=T)
library(boot)
boot=boot.relimp(fit,b=1000),rank=T,diff=T,rela=T)
boot=boot.relimp(fit,b=1000,rank=T,diff=T,rela=T)
booteval.relimp(boot)
plot(booteval.relimp(boot,sort=T))
fit=lm(vitd~ age+bmi+sex+factor(season),data=data)
calc.relimp(fit,rela=T)
booteval.relimp(boot)
plot(booteval.relimp(boot,sort=T))
fit=lm(vitd~ age+sex+factor(season),data=data)
summary(fit)
library(car)
scatterplot(vitd~pth|sex, pch=c(1,15),xlab="PTH",ylab="25(OH)D")
fit=lm(vitd~pth,data=data)
summary(fit)
fit=lm(vitd~pth+sex+pth:sex,data=data)
summary(fit)
library(psych)
dd=cbind(age,bmi,vitd,pth)
pairs.panels(dd)
error.bars.by(vitd,sex,bars=,labels=c("Men","Women"),ylab="25(OH)D",xlab=" ",ylim=c(0,30))
error.bars.by(vitd,sex,bars=T,labels=c("Men","Women"),ylab="25(OH)D",xlab=" ",ylim=c(0,30))
,ylim=c(0,30),col=c("Yellow","Green"))
,ylim=c(0,30))
error.bars.by(vitd,sex,bars=T,labels=c("Men","Women"),ylab="25(OH)D",xlab=" ",ylim=c(0,30))
?transform
install.packages("lmPerm")
library(lmPerm)
set.seed(1234)
fit <- lmp(weight ~height,data=women,perm="Prob")
summary(fit)
fit<- lmp(weight~height + I(height^2),data=women,perm="Prob")
summary(fit)
library(lmPerm)
set.seed(1234)
states<- as.data.frame(state.x77)
fit<- lmp(Murder~Population + Illiteracy + Income+ Frost,data=states,perm="Prob")
summary(fit)
library(lmPerm)
library(multcomp)
set.seed(1234)
fit<- aovp(response~trt,data=cholesterol,perm="Prob")
summary(fit)
library(lmPerm)
set.seed(1234)
fit <- aovp(weight ~ gesttime + dose, data=litter, perm="Prob")
summary(fit)
library(multcomp)
set.seed(1234)
fit <- aovp(weight ~ gesttime + dose, data=litter, perm="Prob")
summary(fit)
library(lmPerm)
set.seed(1234)
fit <- aovp(len~supp*dose, data=ToothGrowth, perm="Prob")
summary(fit)
install.packages("boot")
rsq <- function(formula, data, indices) {
d <- data[indices,]
fit <- lm(formula, data=d)
return(summary(fit)$r.square)
}
library(boot)
set.seed(1234)
results <- boot(data=mtcars, statistic=rsq,
R=1000, formula=mpg~wt+disp)
print(results)
plot(results)
boot.ci(results, type=c("perc", "bca"))
bs <- function(formula, data, indices) {
d <- data[indices,]
fit <- lm(formula, data=d)
return(coef(fit))
}
library(boot)
set.seed(1234)
results <- boot(data=mtcars, statistic=bs,
R=1000, formula=mpg~wt+disp)
print(results)
plot(results, index=2)
boot.ci(results, type="bca", index=2)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file (fileUrl,destfile="housingIdaho.csv",method="curl")
#is the file created?
list.files()
setwd("E:/Dropbox/R/Getting and Cleaning Data")
download.file (fileUrl,destfile="housingIdaho.csv")
list.files()
date.downloaded <- date()
date.downloaded
hid <- read.csv("housingIdaho.csv")
head(hid)
str(hid)
summary(hid)
str(hid)
count(hid[hid$VAL==24])
length(hid[hid$VAL==24])
length(hid[hid$VAL==24,])
head(hid[hid$VAL==24,])
length(hid[hid$VAL==24 AND hid$ST==16,])
data <- hid[hid$VA==24]
str(data)
data <- hid[hid$VA==24,]
str(data)
data <- hid[hid$VA=='24',]
str(data)
data <- hid[hid$VAL=='24',]
str(data)
head(hid$VAL)
str(hid$VAL)
hid$VAL==24
sum(hid$VAL==24)
sum<- as.numeric(hid$VAL==2)
sum<- as.numeric(hid$VAL==24)
sum(as.numeric(hid$VAL==24))
as.numeric(TRUE)
?sum
sum(as.numeric(hid$VAL==24),na.rm=TRUE)
sum(as.numeric(hid$VAL==24),na.rm=TRUE)
